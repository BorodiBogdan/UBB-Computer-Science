bits 32
 
global start
 
extern exit, fopen, fread, fclose, printf
import exit msvcrt.dll
import fopen msvcrt.dll
import fread msvcrt.dll
import fclose msvcrt.dll
import printf msvcrt.dll
 
    ; 
segment data use32 class = data
    filePath db "test.txt", 0
    purpose db "r", 0
    vocale db "aeiouAEIOU"                      ; char vocale[] = "aeiouAEIOU"
    lenVocale equ $ - vocale                    ; int lenVocale = sizeOf(vocale)
    message db "Numarul de vocale este %d", 0
    caracter resb 1                             ; char c
    contor dd 0                                 ; int ct = 0
    descriptor_fisier resb 4
 
    ; 1). Se da un fisier text. Sa se citeasca continutul fisierului, sa se contorizeze numarul de vocale si sa se afiseze aceasta valoare. Numele fisierului text este definit in segmentul de date.
segment code use32 class = code
    start:
        mov ecx, lenVocale                      ; daca nu sunt vocale in lista de vocale atunci nu efectueaza programul (sare la final)
        jecxz nu_exista_vocale_definite
 
        push dword purpose
        push dword filePath
        call [fopen]                            ; deschidere fisier pentru citire
        add esp, 4 * 2
        mov [descriptor_fisier], eax
 
        citeste_caracter:
            push dword [descriptor_fisier]      ; citeste cate un caracter pe rand
            push dword 1
            push dword 1
            push dword caracter
            call [fread]
            add esp, 4 * 4
 
            cmp eax, 0                          ; in cazul in care nu s-a citit caracter (s-a ajuns la finalul fisierului)
            je final                            ; sare la final
 
            mov ecx, lenVocale
            mov esi, vocale                     ; setup-ul pentru loopul ce urmeaza
            verificare_vocala:
                mov bl, [esi]
                cmp bl, [caracter]              ; in cazul in care caracterul citit este in lista de vocale
                je incrementare_contor          ; incrementeaza contorul si iasa din loopul in care parcurge lista de vocale
 
                inc esi
                loop verificare_vocala
 
            jmp citeste_caracter                ; nu incrementeaza contorul
 
            incrementare_contor:                ; ct ++
                mov ecx, [contor]
                inc ecx
                mov [contor], ecx
            jmp citeste_caracter                ; citeste urmatorul caracter (acest jmp are loc chiar daca s-a terminat fisierul)
 
        final:
            push dword [descriptor_fisier]
            call [fclose]                       ; inchidere fisier
            add esp, 4 * 1
 
        nu_exista_vocale_definite:              ; cazul in care lista de vocale este goala
            push dword [contor]
            push dword message
            call [printf]                       ; printeaza rezultatul (numarul de vocale din fisier)
            add esp, 4 * 2
 
        push    dword 0
        call    [exit]
 