     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 0000<rept>              	new_string times 100 dw 0;here we store the resulting string
    11 000000C8 256400                  	format db "%d", 0
    12 000000CB <res 00000004>          	number resd 1
    13                                  
    14                                  segment code use32 class=code
    15                                  start:
    16 00000000 68[CB000000]                push number
    17 00000005 68[C8000000]            	push format
    18 0000000A FF15[00000000]          	call [scanf]
    19 00000010 83C408                  	add esp, 4 * 2
    20                                  
    21 00000013 8B0D[CB000000]          	mov ECX, dword[number];how many times we execute the loop
    22 00000019 BE[00000000]            	mov ESI, new_string; we put in esi the adress where we want to store the even digits
    23                                  
    24 0000001E BE[00000000]            	mov ESI, new_string
    25                                  
    26                                  	my_loop:
    27 00000023 56                      		push ESI
    28 00000024 68[CB000000]            		push number
    29 00000029 FF15[00000000]          		call[scanf]
    30 0000002F 83C408                  		add ESP, 4 * 2
    31 00000032 83C604                  		ADD ESI, 4
    32 00000035 E2EC                    	loop my_loop
    33                                  
    34 00000037 6A00                    	push dword 0 
    35 00000039 FF15[00000000]          	call [exit] 
