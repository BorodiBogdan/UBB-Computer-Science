     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  
     6                                  extern exit               
     7                                  
     8                                  import exit msvcrt.dll     
     9                                  
    10                                  segment data use32 class=data
    11 00000000 0A                          a db 0Ah
    12 00000001 5802                        b dw 258h
    13 00000003 FAFFFD0F                    c dd 0xFFDFFFA
    14 00000007 FAFFFDF9FF0F0F00            d dq 0xF0FFFF9FDFFFA
    15                                      
    16                                  ;c-(a+d)+(b+d) -> 1
    17                                  segment code use32 class=code
    18                                      start:
    19                                          
    20 00000000 A1[07000000]                    MOV EAX, dword [d];d
    21 00000005 8B15[0B000000]                  MOV EDX, dword [d + 4];d -> EDX:EAX
    22                                          
    23 0000000B BB00000000                      MOV EBX, 0
    24 00000010 8A1D[00000000]                  MOV BL, byte [a]
    25 00000016 01D8                            ADD EAX, EBX
    26 00000018 83D200                          ADC EDX, 0
    27                                          ;ADC EDX, 0; a + d in case there is a carry
    28                                                
    29 0000001B 8B1D[03000000]                  MOV EBX, [c]
    30 00000021 29C3                            SUB EBX, EAX
    31 00000023 83DA00                          SBB EDX, 0
    32 00000026 89D8                            MOV EAX, EBX; c - (a + d)
    33                                          
    34 00000028 B900000000                      MOV ECX, 0
    35 0000002D 668B0D[01000000]                MOV CX, [b]
    36 00000034 01C8                            ADD EAX, ECX
    37 00000036 83D200                          ADC EDX, 0
    38                                          
    39 00000039 0305[07000000]                  ADD EAX, dword [d]
    40 0000003F 83D200                          ADC EDX, 0
    41 00000042 0315[0B000000]                  ADD EDX, dword[d + 4]
    42                                          
    43                                          
    44 00000048 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 0000004A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
