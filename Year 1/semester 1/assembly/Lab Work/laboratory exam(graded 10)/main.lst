     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fscanf, scanf, fopen, fclose, printf, fprintf, fclose
     5                                  
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import fscanf msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  
    15                                  segment data use32 class=data
    16 00000000 0A00                        newline db 10, 0
    17 00000002 53756D206F66206772-         sum_of_grades_message db "Sum of grades is: ", 0
    17 0000000B 616465732069733A20-
    17 00000014 00                 
    18 00000015 546865206469666665-         difference_of_grades db "The difference of grades is: ", 0
    18 0000001E 72656E6365206F6620-
    18 00000027 677261646573206973-
    18 00000030 3A2000             
    19 00000033 746573742E74787400          file_name db "test.txt", 0;acesta este fisierul din care citim
    20 0000003C 722B00                      acces_mode db "r+", 0
    21 0000003F 256400                      decimal_format db "%d", 0
    22 00000042 <res 00000028>              grade resd 10
    23 0000006A <res 00000028>              file_descriptor resd 10
    24 00000092 <res 00000028>              sum_of_grades resd 10
    25 000000BA <res 00000028>              first_grade resd 10
    26                                  
    27                                  segment code use32 class=code
    28                                  start:
    29 00000000 68[3C000000]                push acces_mode
    30 00000005 68[33000000]                push file_name
    31 0000000A FF15[00000000]              call [fopen]
    32 00000010 83C408                      add esp, 4 * 2
    33 00000013 A3[6A000000]                mov dword [file_descriptor], EAX
    34                                      ;mai sus am deschis fisierul din data segment si am golit stiva
    35                                  
    36                                      my_loop:
    37 00000018 68[42000000]                    push grade
    38 0000001D 68[3F000000]                    push decimal_format
    39 00000022 FF35[6A000000]                  push dword[file_descriptor]
    40 00000028 FF15[00000000]                  call [fscanf]
    41 0000002E 83C40C                          add esp, 4 * 3
    42                                          ;am citit gradeul
    43                                          
    44 00000031 83F8FF                          cmp EAX, -1
    45 00000034 7429                            jz final;inseamna ca nu a mai citit nimic
    46                                  
    47                                          ;tinem minte primul grade pentru a calcula mai usor diferenta
    48 00000036 A1[BA000000]                    MOV EAX, dword[first_grade]
    49 0000003B 83F800                          cmp EAX, 0
    50 0000003E 750A                            JNE sari_peste;daca nu e 0 am citit primul grade
    51 00000040 A1[42000000]                        mov EAX, dword[grade]
    52 00000045 A3[BA000000]                        mov dword[first_grade], EAX
    53                                          sari_peste:
    54                                  
    55 0000004A A1[42000000]                    mov EAX, dword[grade]
    56 0000004F 8B1D[92000000]                  mov EBX, dword[sum_of_grades]
    57 00000055 01C3                            ADD EBX, EAX;;adunam gradeul la suma
    58 00000057 891D[92000000]                  MOV dword[sum_of_grades], EBX;tinem minte suma in memorie
    59 0000005D EBB9                        jmp my_loop
    60                                      final:
    61                                  
    62 0000005F 68[00000000]                push newline
    63 00000064 FF35[6A000000]              push dword[file_descriptor]
    64 0000006A FF15[00000000]              call [fprintf]
    65 00000070 83C408                      add esp, 4 * 2   
    66                                      ;punem newline
    67                                  
    68 00000073 68[02000000]                push sum_of_grades_message
    69 00000078 FF35[6A000000]              push dword[file_descriptor]
    70 0000007E FF15[00000000]              call [fprintf]
    71 00000084 83C408                      add esp, 4 * 2
    72                                      ;afisam mesajul pentru a stii ce cerinta am rezolvat
    73                                  
    74 00000087 FF35[92000000]              push dword[sum_of_grades]
    75 0000008D 68[3F000000]                push decimal_format
    76 00000092 FF35[6A000000]              push dword[file_descriptor]
    77 00000098 FF15[00000000]              call [fprintf]
    78 0000009E 83C40C                      add esp, 4 * 3
    79                                      ;am afisat si suma notelor
    80                                  
    81 000000A1 68[00000000]                push newline
    82 000000A6 FF35[6A000000]              push dword[file_descriptor]
    83 000000AC FF15[00000000]              call [fprintf]
    84 000000B2 83C408                      add esp, 4 * 2   
    85                                      ;punem newline iarasi
    86                                  
    87 000000B5 68[15000000]                push difference_of_grades
    88 000000BA FF35[6A000000]              push dword[file_descriptor]
    89 000000C0 FF15[00000000]              call [fprintf]
    90 000000C6 83C408                      add esp, 4 * 2
    91                                      ;afisam mesajul pentru diferenta notelor
    92                                      ;aici calculam diferenta
    93                                      ;scadem din primul grade * 2 suma tuturor gradeurilor
    94                                      ;->rezulta diferenta
    95                                  
    96 000000C9 A1[BA000000]                mov EAX, dword[first_grade]
    97 000000CE B902000000                  MOV ecx, 2
    98 000000D3 F7E1                        mul ECX
    99 000000D5 8B1D[92000000]              MOV EBX, dword[sum_of_grades]
   100 000000DB 29D8                        SUB EAX, EBX
   101                                  
   102                                      ;mai jos afisam diferenta
   103 000000DD 50                          push EAX
   104 000000DE 68[3F000000]                push decimal_format
   105 000000E3 FF35[6A000000]              push dword[file_descriptor]
   106 000000E9 FF15[00000000]              call [fprintf]
   107 000000EF 83C40C                      add esp, 4 *3
   108                                      ;problema e gata!
   109                                  
   110 000000F2 FF35[6A000000]              push dword[file_descriptor]
   111 000000F8 FF15[00000000]              call [fclose]
   112 000000FE 83C404                      add esp, 4 * 1
   113                                      ;am inchis fisierul
   114 00000101 6A00                    	push dword 0 
   115 00000103 FF15[00000000]          	call [exit] 
