     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf, scanf
     5                                  
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  
    10                                  ;problem 1
    11                                  ;%d -> decimal
    12                                  ;%x -> 16
    13                                  ;scanf(%d, %x)
    14                                  segment data use32 class=data
    15 00000000 61203D2000                  message_for_a db "a = ", 0
    16 00000005 62203D2000                  message_for_b db "b = ", 0
    17 0000000A 61202A2062203D2025-         result_message db "a * b = %lld", 0
    17 00000013 6C6C6400           
    18 00000017 256400                      format db "%d", 0
    19 0000001A FFFFFFFF                    a dd 0FFFFFFFFh
    20 0000001E FFFFFFFF                    b dd 0FFFFFFFFh
    21 00000022 <res 00000008>              result resq 1
    22                                  
    23                                  segment code use32 class=code
    24                                  start:
    25 00000000 68[00000000]                push dword message_for_a
    26 00000005 FF15[00000000]              call [printf]
    27 0000000B 83C404                      add esp, 4 * 1;print message for a
    28                                      
    29 0000000E 68[1A000000]                push dword a
    30 00000013 68[17000000]                push dword format
    31 00000018 FF15[00000000]              call [scanf];read a from console
    32                                      
    33 0000001E 83C408                      add esp, 2 * 4
    34                                      
    35 00000021 68[05000000]                push dword message_for_b;print message for bits
    36 00000026 FF15[00000000]              call[printf]
    37                                          
    38 0000002C 83C404                      add esp, 4 * 1
    39                                      
    40 0000002F 68[1E000000]                push dword b
    41 00000034 68[17000000]                push dword format
    42 00000039 FF15[00000000]              call [scanf];reading b from console
    43                                      
    44 0000003F 83C408                      add esp, 4 * 2
    45                                      
    46 00000042 A1[1A000000]                mov eax, [a]
    47 00000047 8B1D[1E000000]              mov ebx, [b]
    48 0000004D F7E3                        mul ebx;we have a * b in edx:eax
    49                                      
    50 0000004F A3[22000000]                mov [result], eax
    51 00000054 8915[26000000]              mov [result + 4], edx;we have a * b in result
    52                                      
    53                                      ;now we need to display the result
    54                                          
    55 0000005A FF35[26000000]              push dword [result + 4]
    56 00000060 FF35[22000000]              push dword [result]
    57 00000066 68[0A000000]                push dword result_message
    58 0000006B FF15[00000000]              call [printf]
    59                                      
    60                                      
    61 00000071 6A00                    	push dword 0 
    62 00000073 FF15[00000000]          	call [exit] 
