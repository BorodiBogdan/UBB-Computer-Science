     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ;[[b*c-(e+f)]/(a+d)
    12                                  ;a,b,c,d-byte, e,f,g,h-word
    13                                  segment data use32 class=data
    14 00000000 06                          a DB 6
    15 00000001 08                          b DB 8
    16 00000002 0B                          c DB 11
    17 00000003 05                          d DB 5
    18 00000004 0101                        f DW 257
    19 00000006 5701                        e DW 343
    20                                      
    21                                  
    22                                  
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 A0[00000000]                    MOV AL, [a];a
    26 00000005 8A1D[02000000]                  MOV BL, [c]
    27 0000000B F6E3                            MUL BL; AX: a * c
    28                                          
    29 0000000D 668B1D[06000000]                MOV BX, [e];e
    30 00000014 66031D[04000000]                ADD BX, [f];e + f
    31                                          
    32 0000001B 6629D8                          SUB AX, BX;a * c - (e + f)
    33                                          
    34 0000001E 8A0D[00000000]                  MOV CL, [a];a
    35 00000024 020D[03000000]                  ADD CL, [d];a + d
    36                                   
    37 0000002A F6F1                            DIV CL;[[b*c-(e+f)]/(a+d)
    38                                          
    39                                          
    40                                          
    41 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
