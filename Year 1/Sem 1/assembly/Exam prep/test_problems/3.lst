     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf, scanf
     5                                  import printf msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 010000000600000003-         sir dd 1, 6 ,3 , 3,4, 32, 3,1321,1312,231 ,123 ,432, 312
    10 00000009 000000030000000400-
    10 00000012 000020000000030000-
    10 0000001B 002905000020050000-
    10 00000024 E70000007B000000B0-
    10 0000002D 01000038010000     
    11                                      len equ ($ - sir) / 4
    12 00000034 25642000                    format db "%d ", 0
    13                                  segment code use32 class=code
    14                                  start:
    15                                      
    16 00000000 B100                        MOV CL, 0
    17 00000002 BE[00000000]                mov ESI, sir
    18                                  
    19                                      my_loop:
    20 00000007 89F7                            mov EDI, ESI
    21 00000009 88CD                            MOV CH, CL
    22                                  
    23                                          second_loop:
    24 0000000B 8B06                                mov EAX, dword[ESI]
    25 0000000D 3B07                                cmp EAX, dword[EDI]
    26                                              
    27 0000000F 7E08                                jng not_swap
    28 00000011 8B06                                    mov EAX, dword[ESI]
    29 00000013 8B17                                    mov EDX, dword[EDI]
    30 00000015 8907                                    mov dword[EDI], EAX
    31 00000017 8916                                    mov dword[ESI], EDX
    32                                              not_swap:
    33                                  
    34 00000019 83C704                              add EDI, 4
    35 0000001C FEC5                                INC CH
    36 0000001E 80FD0D                              cmp CH, len
    37 00000021 7402                                jz end_second_loop
    38 00000023 EBE6                            jmp second_loop 
    39                                          end_second_loop:
    40                                  
    41 00000025 83C604                          ADD ESI, 4
    42 00000028 FEC1                            INC CL
    43 0000002A 80F90D                          cmp CL, len
    44 0000002D 7402                            jz end_my_loop
    45 0000002F EBD6                        jmp my_loop
    46                                      end_my_loop:
    47                                  
    48                                  
    49 00000031 BE[00000000]                mov ESI, sir
    50 00000036 B90D000000                  mov ECX, len
    51                                  
    52                                      While:
    53 0000003B 60                              pushad
    54 0000003C FF36                            push dword[ESI]
    55 0000003E 68[34000000]                    push format
    56 00000043 FF15[00000000]                  call[printf]
    57 00000049 83C408                          add esp, 4 * 2
    58 0000004C 61                              popad
    59 0000004D 83C604                          add ESI, 4
    60 00000050 E2E9                        loop While
    61                                  
    62 00000052 6A00                    	push dword 0 
    63 00000054 FF15[00000000]          	call [exit] 
